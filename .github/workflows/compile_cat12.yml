name: Build CAT12 standalone

on:
  workflow_dispatch:

env:
  MLM_LICENSE_TOKEN: ${{ secrets.MATLAB_BATCH_TOKEN }}

jobs:
  build_matlab_standalone:
    name: Build CAT12 standalone
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # This actions compiles by default with the newest available matlab version
        version: ["R2023b"]
        os: ["ubuntu-22.04", "macos-13", "macos-latest", "windows-latest"] # macos-13 has Intel architecture, macos-latest has Apple Silicon
        include: # These includes are just giving the OSs additional names
          - os: ubuntu-22.04
            os_name: Linux
            mex_name: mexa64
          - os: macos-13
            os_name: macOS_Intel
            mex_name: mexmaci64
          - os: macos-latest
            os_name: macOS_Arm64
            mex_name: mexmmaca64
          - os: windows-latest
            os_name: Windows
            mex_name: mexw64
    steps:
      - name: Checkout CAT12
        uses: actions/checkout@v4

      - name: Update
        run: make update

      - name: Install rsync
        if: runner.os == 'Windows'
        run: choco install -y rsync

      - name: Checkout SPM
        uses: actions/checkout@v3
        with:
          repository: spm/spm
          path: spm
          
      - name: Install CAT12 in SPM toolbox
        shell: bash
        run: |
          mkdir -p spm/toolbox/cat12
          rsync -a --exclude='.git' \
            --exclude='spm/toolbox/cat12/' \
            --exclude='batches/' \
            --exclude='catQC/' \
            --exclude='check_pipeline/' \
            --exclude='development/' \
            --exclude='html/' \
            --exclude='internal/' \
            --exclude='mexmaca/' \
            --exclude='mexmaci/' \
            --exclude='spm/' \
            --exclude='Makefile' \
            ./ spm/toolbox/cat12/

      - name: Cleanup (Linux/Mac)
        if: runner.os != 'Windows'
        run: rm -rf standalone
      
      - name: Cleanup (Windows)
        if: runner.os == 'Windows'
        run: Remove-Item -Recurse -Force standalone
  
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: ${{matrix.version}}
          products: MATLAB_Compiler

      - name: Extract MATLAB version to file
        uses: matlab-actions/run-command@v2
        with:
          command: |
            fileID = fopen('matlab_release.txt', 'w')
            fprintf(fileID, matlabRelease.Release)
            fclose(fileID)
        # sometimes this step hangs when closing matlab, automatically terminating after 2 minutes solves the issue
        timeout-minutes: 2
        continue-on-error: true

      - name: Set environment variable with MATLAB version
        shell: bash # Works on Windows as well because of shell: bash
        run: |
          matlab_release=$(cat matlab_release.txt)
          echo "MATLAB_VERSION=$matlab_release" >> $GITHUB_ENV

      - name: Compile CAT12 mex-files
        uses: matlab-actions/run-command@v2
        with:
          command: |
            addpath('spm');
            cd('spm/toolbox/cat12')
            compile
            
      - name: Release CAT12
        if: runner.os == 'Linux'
        run: |
          cd spm/toolbox
          zip -r ../../cat_${{ github.ref_name }}_${{ matrix.os_name }}.zip cat12

      - name: Zip mex-files
        run: zip -r ../../cat_${{ github.ref_name }}_${{ matrix.mex_name }}.zip . -i cat12/*.${{ matrix.mex_name }}

      # 1) Add SPM with subfolders to the path 2) Run spm_make_standalone in matlab
      - name: Build MATLAB standalone
        uses: matlab-actions/run-command@v2
        with:
          command: |
            cd('spm');
            addpath(genpath('.'));
            savepath;
            cd('config');
            spm_make_standalone

      - name: Install zip on Windows
        if: runner.os == 'Windows'
        run: choco install zip -y
        shell: bash

      - name: Compress to ZIP
        run: |
          mv spm/toolbox/cat12/standalone standalone/
          mv standalone cat_standalone
          zip -r cat_standalone_${{ github.ref_name }}_${{ matrix.os_name }}_${{ env.MATLAB_VERSION }}.zip cat_standalone/*

      - name: Upload ZIP
        uses: actions/upload-artifact@v4
        with:
          name: cat_standalone_${{ github.ref_name }}_${{ matrix.os_name }}_${{ env.MATLAB_VERSION }}
          path: cat_*.zip

